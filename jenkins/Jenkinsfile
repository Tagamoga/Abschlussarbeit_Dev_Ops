pipeline {
    agent any

    stages {
        stage('Build - Backend') {
            steps {
                dir('backend') {
                    sh 'mvn clean install -Pdev'
                }
            }
        }

        stage('Build - Frontend') {
            steps {
                dir('frontend') {
                    sh '''
                        npm install
                        npm run build
                    '''
                }
            }
        }

        stage('Test - Backend') {
            steps {
                dir('backend') {
                    sh 'mvn test'
                }
            }
        }

        stage('Test - Frontend') {
            steps {
                dir('frontend') {
                    sh 'npm test'
                }
            }
        }

        stage('Docker Build') {
            steps {
                script {
                    dir('backend') {
                        sh """
                        docker build -t skyerededucation.azurecr.io/backend:dev .
                        """
                    }

                    dir('frontend') {
                        sh """
                        docker build -t skyerededucation.azurecr.io/frontend:dev .
                        """
                    }
                }
            }
        }

        stage('Docker Push') {
            steps {
                echo 'Service Principal (empfohlen für CI/CD) fehlt. Sonst muss interaktiv gehandelt werden. Ich habe nicht die Rechte ein SP zu erstellen.'
            }
        }

        stage('Deploy Dev') {
            steps {
                script {
                    // SecretFile "mariadonner-dev1.conf" benutzen, sobald sie hochgeladen ist.
                    withCredentials([file(credentialsId: 'mariadonner-dev1', variable: 'KUBECONFIG')]) {
                        echo "Deploying to Kub-Dev"

                        sh '''
                            kubectl apply -f k8s/backend-deployment.yaml --namespace mariadonner-dev
                            kubectl rollout status deployment backend --namespace mariadonner-dev
                        '''

                        sh '''
                            kubectl apply -f k8s/frontend-deployment.yaml --namespace mariadonner-dev
                            kubectl rollout status deployment frontend --namespace mariadonner-dev
                        '''
                    }
                }
            }
        }



        stage('Manual Approval for Prod') {
            steps {
                input message: 'Freigabe für Prod Deployment?', ok: 'Deploy Prod'
            }
        }

        stage('Deploy Prod') {
            steps {
                script {
                    // SecretFile "mariadonner-prod1.conf" benutzen, sobald sie hochgeladen ist.
                    withCredentials([file(credentialsId: 'mariadonner-prod1', variable: 'KUBECONFIG')]) {
                        echo "Deploying to Kub-Prod"

                        sh '''
                            kubectl apply -f k8s/backend-deployment.yaml --namespace mariadonner-prod
                            kubectl rollout status deployment backend --namespace mariadonner-prod
                        '''

                        sh '''
                            kubectl apply -f k8s/frontend-deployment.yaml --namespace mariadonner-prod
                            kubectl rollout status deployment frontend --namespace mariadonner-prod
                        '''
                    }
                }
            }
        }

    }
}